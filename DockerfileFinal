#cd docker && docker build -t itmt -f Dockerfile . 
#docker run --gpus all -it itmt
FROM nvidia/cuda:11.7.1-cudnn8-runtime-ubuntu20.04

WORKDIR /DualNetENE
ADD . /DualNetENE

# Since wget is missing
RUN apt-get update && apt-get install -y wget

#Install MINICONDA
RUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O Miniconda.sh && \
  /bin/bash Miniconda.sh -b -p /opt/conda && \
  rm Miniconda.sh

ENV PATH /opt/conda/bin:$PATH

# Install gcc as it is missing in our base layer
RUN apt-get update && apt-get -y install gcc 

COPY DualNetENE.yml .
RUN conda env create -f DualNetENE.yml

# Make RUN commands use the new environment:
SHELL ["conda", "run", "-n", "myenv", "/bin/bash", "-c"]

COPY Model ./Model
COPY OUT ./OUT
COPY Output ./Output

COPY ./Scripts/src src
COPY ./Scripts/src/calibration.py /
COPY ./Scripts/src/contour_variance.py /
COPY ./Scripts/src/data_ene_test.py / 
COPY ./Scripts/src/model_callbacks.py /
COPY ./Scripts/src/model_multi_dual.py /
COPY ./Scripts/src/preprocessingroi_nrrd.py /
COPY ./Scripts/src/rescale.py /
COPY ./Scripts/src/test_ene.py /
COPY ./Scripts/src/util.py /

COPY ./Scripts/utils utils 
COPY ./Scripts/utils/crop_roi.py /
COPY ./Scripts/utils/dcm_to_nrrd.py /
COPY ./Scripts/utils/interpolate.py /
COPY ./Scripts/utils/util.py /

##COPY BASHSCRIPT Scripts/BASHSCRIPT
COPY ./Scripts/BASHSCRIPT/BioImClass_preprocessing.sh /
COPY ./Scripts/BASHSCRIPT/BioImClass_test.sh / 

EXPOSE 5000

ENTRYPOINT ["./Scripts/BASHSCRIPT/BioImClass_preprocessing.sh"]
